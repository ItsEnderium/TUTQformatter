[big][b]GENERAL INFORMATION[/b][/big]

[b][color=red]WELCOME TO THE LIST OF REJECTED SUGGESTIONS![/color]
This topic contains suggestions that have previously been rejected by the Scratch Team.  As a result, these suggestions will not be added to Scratch, so please do not make any posts in the "Suggestions" forum asking for one of these.  Otherwise, you may be directed to this topic.

Moreover, please do not make any posts in the "Suggestions" forum asking that the Scratch Team "rethink" a rejected suggestion unless you are giving a solution to the problem that caused the feature to be rejected.

[color=red]PLEASE DO NOT SUGGEST THINGS HERE![/color]
I am not a member of the Scratch Team; your suggestion will get more attention if you make your own topic about it.  Also, please do not spam or create off-topic posts, or else they may be deleted.

[color=red]USE THE REPORT BUTTON ON SPAM/OFF-TOPIC POSTS; DON'T RESPOND![/color]
Responding to spam or off-topic posts just leads to more off-topic discussion.  Simply use the Report button whenever you see an off-topic post on this thread, without responding; a moderator will remove it when they get the chance.[/b]

[i]Every suggestion listed here has been officially rejected by the Scratch Team.[/i]  Descriptions for each rejected suggestion have been written by myself, and in addition, I have included a link to a post by a Scratch Team member officially rejecting the suggestion.  If you have any questions on whether or not your suggestion is rejected, or if you do not understand why something was rejected, feel free to ask about it here.

If you see someone in the forums or elsewhere on the website trying to suggest something that is rejected below, feel free to refer them to this thread.  It would be a good idea to include a quote from this list explaining why their suggestion is rejected.

Please let me know if any information is incorrect, missing, or outdated!  Please also update me on any recently-rejected suggestions so we can discuss whether or not to add them to this list.  Even if a suggestion is infrequently suggested or it is "obviously rejected," it's still helpful for me to see that the suggestion exists.  I will do my best to regularly update and revise the list as needed.  In addition, feel free to tell me if there are any spelling mistakes or formatting errors.  Other general feedback is appreciated as well. :)

[url=https://scratch.mit.edu/discuss/post/3471785/]Click here[/url] for a table of contents with shorter explanations on why suggestions are rejected.

[b]Previous Lists[/b]
[url=https://scratcharchive.asun.co/forums/viewtopic.php?id=20075]July 2009 – May 2013[/url] (by @Chrischb)
[url=https://scratch.mit.edu/discuss/topic/4789/]May 2013 – February 2017[/url] (by @jvvg)
[url=https://scratch.mit.edu/discuss/topic/239492/]February 2017 – August 2018[/url] (by @customhacker)
[url=https://scratch.mit.edu/discuss/topic/310111/]August 2018 – March 2019[/url] (by @LionHeart70)

[b]Translated Lists[/b]
[url=https://scratch.mit.edu/discuss/post/6031411/]日本語[/url] (Japanese, by @inoking)
[url=https://scratch.mit.edu/discuss/topic/413104/]Français[/url] (French, by @IA-maker)
[url=https://scratch.mit.edu/discuss/topic/509049/]Română[/url] (Romanian, by @LankyBox01)

====================

[big][b]THE REJECTED SUGGESTIONS[/b][/big]

[big][b][u]1. Scratch Blocks[/u][/b][/big]

[b]1.1 [url=https://scratch.mit.edu/discuss/post/634620/]"Broadcast received" boolean block[/url][/b]
This in theory would allow a project to detect when a broadcast is sent, but there is ambiguity on how this would work.  Would it return true if the broadcast was run at any point after the green flag was clicked, or only on the instant the broadcast was run, or something else?  The workaround is simple: use variables that change when a broadcast is received, then use the "equals" block.

However, the blocks "repeat until broadcast received" and "wait until broadcast received" are NOT rejected; you can discuss them on [url=https://scratch.mit.edu/discuss/topic/324844/]this topic[/url].

[scratchblocks]
<[message v] received? :: events>
[/scratchblocks]

[b]1.2 [url=https://scratch.mit.edu/discuss/post/2070854/]"When stop sign clicked" hat block[/url][/b]
This block would allow users to click the stop sign to run a script.  However, the stop sign is designed to stop all the scripts in the project.  With this block in place, more scripts will start when you want the project to stop, thus defeating the purpose of the stop sign.  Regardless, there are workarounds for this block using the timer or ghost effect blocks; these can be found in [url=https://scratch.mit.edu/discuss/post/3547555/]this post[/url].

This suggestion extends to any block that causes a script to be run as a result of the stop sign being clicked, not just the specific hat block below.  For more information, see [url=https://scratch.mit.edu/discuss/post/6871820/]this post[/url].

[scratchblocks]
when stop sign clicked :: events :: hat
[/scratchblocks]

[b]1.3 [url=https://scratch.mit.edu/discuss/post/3603084/]"Pointing towards sprite" boolean block[/url][/b]
This in theory would allow a sprite to detect if it is pointing towards another sprite, but there is ambiguity on how this would work.  Would it return true if the sprite is pointing in any general direction towards another sprite, or strictly at the center of that sprite?  This depends on your intended function of the block, at which point you may consider implementing your own workaround.

[scratchblocks]
<pointing towards [sprite v]? :: sensing>
[/scratchblocks]

[b]1.4 [url=https://scratch.mit.edu/discuss/post/3669210/]Social action reporter blocks[/url][/b]
This block could be used, for example, to obtain the current number of loves of the project.  However, project creators can easily use these blocks to prevent Scratchers from playing unless the project is given enough loves.  If a user presses the love button on a project, it should be because they enjoyed the project, not because they are trying to reach some sort of goal.  Social actions are not intended to be a way to interact with a Scratch project.

This suggestion extends to all social actions, including views, loves, favorites, remixes, comments, and followers.

[scratchblocks]
(number of [loves v] :: sensing)
[/scratchblocks]

[b]1.5 [url=https://scratch.mit.edu/discuss/post/3528653/]Cloud lists[/url][/b]
This block would allow you to create lists available for everyone to see, similar to cloud variables.  However, cloud lists would require similar restrictions as cloud variables, and the issues currently present with cloud variables would only grow with the addition of cloud lists.  You can still use cloud variables to create a list which contains entries everyone can see.

[scratchblocks]
(☁ list :: list)
[/scratchblocks]

[b]1.6 [url=https://scratch.mit.edu/discuss/post/3684338/]2D lists[/url][/b]
2D lists, also known as 2D arrays, nested lists, or matrices, are a type of data structure that allows you to put an entire list as an element of another list; that is, it allows you to put lists inside of lists.  These sorts of data structures are used widely in other programming languages and functions similarly to a table.

This block, and others, would allow you to create 2D lists to store information.  However, this is too complicated for what is supposed to be an introductory programming language.  There are workarounds possible by using an ordinary list and an indexing function.  For those who are interested, it may be worth checking out [url=https://snap.berkeley.edu/]Snap![/url].  It is a block-based programming language designed for experienced programmers and has more advanced data structures than Scratch does.

[scratchblocks]
add [] to sublist () of [list v] :: list
[/scratchblocks]

[b]1.7 [url=https://scratch.mit.edu/discuss/post/272115/]3D Scratch[/url][/b]
A 3D Scratch interface, involving a z-axis in the project stage, could make it easier to create 3D projects.  However, Scratch is a language that is designed to be as easy as possible for beginners to learn.  The purpose of Scratch is to teach beginners basic programming concepts, which is best accomplished with a 2D interface.  Adding a 3D interface could make Scratch more difficult to learn and teach.  This suggestion also includes the possibility for virtual-reality "Scratch VR" features, where a lot of the same difficulties come up; for more information, see [url=https://scratch.mit.edu/discuss/post/4149704/]this post[/url].

For those who are interested, it may be worth checking out [url=http://beetleblocks.com/]Beetle Blocks[/url] or [url=https://creaticode.com/]CreatiCode[/url].  They are block-based programming languages similar to the Scratch editor, but with 3D features.  There is another similar program to Scratch that contains block programming with 3D features, called [url=https://education.mit.edu/project/starlogo-tng/]Starlogo TNG[/url].

[b]1.8 [url=https://scratch.mit.edu/discuss/post/4186455/]Blocks that control the mouse pointer[/url][/b]
This block, and others, could be used to hide the mouse pointer, change the way that it looks, freeze it, or prevent it from leaving the project screen.  These blocks, however, do not significantly change the types of projects that can be created with Scratch; for more information, see [url=https://scratch.mit.edu/discuss/post/3889314/]this post[/url].  In addition, they may confuse users by having them wonder where the mouse pointer went.

However, changing the look of the mouse pointer to one of the default mouse pointers is NOT rejected; you can discuss that on [url=https://scratch.mit.edu/discuss/topic/512009/]this topic[/url].

[scratchblocks]
hide mouse pointer :: looks
[/scratchblocks]

[b]1.9 [url=https://scratch.mit.edu/discuss/post/4034761/]"Forever if" C block[/url][/b]
This block was in the Scratch 1.4 editor, and worked the same as putting an "if" block inside a "forever" loop.  It was removed in Scratch 2.0 because many beginners found it to be confusing.  The aforementioned workaround is evidently simple and more intuitive.

[scratchblocks]
forever if <> :: control
[/scratchblocks]

[b]1.10 [url=https://scratch.mit.edu/discuss/post/3899362/]Permanent option for cat blocks[/url][/b]
The [url=https://en.scratch-wiki.info/wiki/Cat_Block]cat blocks[/url] were created by the Scratch Team as a part of April Fools' Day, where some Scratch blocks like the one below had cat ears and a face on them.  Many Scratchers adored the cat blocks and have suggested that the Scratch Team permanently keep them in the editor, or otherwise make a permanent toggle so users can turn them on or off.  However, the cat blocks were intended to be temporary, and the Scratch Team has stated that they do not plan to bring them back as a permanent option.  However, it is possible that they may temporarily come back during future April Fools' Day events.

[img]https://u.cubeupload.com/k7e/2279ff8773e6f52cb251.png[/img]

[b]1.11 [url=https://scratch.mit.edu/discuss/post/4903222/]Comment block[/url][/b]
In principle, the comment block has no effect, but it would be used to write comments in-line with other blocks in a script.  This would be useful for those who want to explain how their code works, for example.  This block was found to be too confusing for beginners, who expected all blocks to do something (the comment block does not do anything).  As a result, the Scratch Team created the existing comment system, where comments can be attached to a block in a way that is clearly separate from the rest of the blocks in the script.  There is an easy workaround: create a custom block with a text input, and don't put anything in its definition.

[scratchblocks]
comment [] :: #808080
[/scratchblocks]

[b]1.12 [url=https://scratch.mit.edu/discuss/post/4336855/]"Jump to code" block[/url][/b]
This block could be used to allow a program to jump to another point in the code, even within the same script, similar to the "goto" statement used in other programming languages.  This could cause confusion, however; by implementing less [url=https://en.wikipedia.org/wiki/Structured_programming]structured programming[/url], this could cause code to be confusing to read and write.

[scratchblocks]
jump to [code v] :: control
[/scratchblocks]

[big][b][u]2. The Coding Interface[/u][/b][/big]

[b]2.1 [url=https://scratch.mit.edu/discuss/topic/196554/?page=1#post-1958869]Adding users to work on projects[/url][/b]
Having multiple Scratchers work on the same project would be difficult to moderate not only due to technological limitations but also because it could lead to private messaging; for more information, see #7.1 on this list.  This suggestion includes live editing (similar to Google Docs) and other forms of private collaboration.  If you would like to work on a project with another Scratcher, you can remix each others' projects.

At the moment, a turn-based collaboration system for shared projects is NOT rejected; you can discuss it on [url=https://scratch.mit.edu/discuss/topic/322107/]this topic[/url].

[b]2.2 [url=https://scratch.mit.edu/discuss/topic/59876/?page=6#post-3471767]Text-based syntax in Scratch[/url][/b]
Some users wish to code Scratch not with the blocks, but with typing code instead (similar to how more advanced programming languages work).  Others are interested in an option to view, convert, or download Scratch code to other programming languages.  However, the Scratch Team has discussed this possibility multiple times and has decided every time that it would not be beneficial for beginners or teachers.

This suggestion extends to coding, viewing, converting, or downloading Scratch in [i]any[/i] text-based language, including BBCode, Javascript, some form of pseudocode, or some other programming language.  If you wish to code using another language, then you can learn it on your own, but it would have to be done outside of Scratch.  For those who are interested, it may be worth checking out [url=https://tosh.blob.codes/]Tosh[/url].  It is a text-based programming language that serves as a text editor for Scratch projects.  Another option is [url=https://arcade.makecode.com/]MakeCode Arcade[/url], a programming language that can convert between block-based and text-based programming within the editor.

[b]2.3 [url=https://scratch.mit.edu/discuss/topic/337098/?page=1#post-3409849]Set the editor to look like older versions of Scratch[/url][/b]
Some users prefer the look and feel of the Scratch 1.4 and 2.0 editors, and have suggested an option to make the editor look like Scratch 1.4 or 2.0, but still run off of HTML5 like Scratch 3.0 does.  However, this would be more complicated for educational and documentation purposes.  It could be confusing if someone is trying to learn Scratch from someone who is using a completely different layout of the editor than them.

In addition, the Scratch Team changed the design for a reason: to make it easier, more intuitive, and friendlier for newcomers to use.  If you dislike the Scratch 3.0 editor, you can still download the [url=https://scratch.mit.edu/scratch_1.4]Scratch 1.4[/url] or [url=https://scratch.mit.edu/download/scratch2]Scratch 2.0[/url] offline editors.

[b]2.4 [url=https://scratch.mit.edu/discuss/topic/336480/?page=1#post-3429453]Revert back to older versions of the Scratch editor[/url][/b]
The Scratch editor has to update sometimes to accommodate certain changes.  In particular, an online editor that ran off of Adobe Flash (rather than Squeak) was added in the Scratch 2.0 editor, and the Scratch 3.0 editor was created for tablet support.  Changing the editor back to these older versions would not only undo years of hard work by the Scratch Team, but they also might not work online anymore due to the discontinuation of Flash.  If you wish, you can download the [url=https://scratch.mit.edu/scratch_1.4]Scratch 1.4[/url] and [url=https://scratch.mit.edu/download/scratch2]Scratch 2.0[/url] offline editors.

The Scratch Team is still working on bug fixes, new features, and other improvements on the Scratch 3.0 editor.  The new interface was created in such a way that it is easy for the Scratch Team to keep working on improvements.  The Scratch Team will continue to evaluate constructive feedback on how they could improve upon the current Scratch editor.

[b]2.5 [url=https://scratch.mit.edu/discuss/topic/318336/?page=3#post-3303002]Official Scratch to EXE converter[/url][/b]
On Scratch, an important goal is to have anyone be able to look at the code for any project.  This philosophy is not only important for learning code and remixing, but is also important for moderation purposes; for more information, see #3.2 and #4.1 on this list.  Converting to EXE (or any other black box executables) will prevent users from looking at the code, and hence goes against this philosophy.  Third-party converters do exist, and you are allowed to use those, but the Scratch Team will not make an official converter.

[b]2.6 [url=https://scratch.mit.edu/discuss/topic/11102/?page=1#post-375856]Increase the 300 clone limit[/url][/b]
The clone limit is set in place to prevent projects from becoming unplayable.  Otherwise, users could create a large number of clones very quickly and crash someone's browser page.  Plus, the Scratch Team wants to make sure that all projects run smoothly for as many people as possible.  Increasing the limit to even 500 clones might make the project run slowly on some users' devices.

[b]2.7 [url=https://scratch.mit.edu/discuss/topic/399466/?page=3#post-3983340]Scratch editor for video game consoles[/url][/b]
The Scratch Team does not have the resources to put a Scratch editor onto a video game console.  This includes making a Scratch editor for Nintendo, Xbox, and Playstation consoles.

However, the ability to connect gaming controllers to a computer or tablet to use for Scratch is NOT rejected.  You can discuss it on [url=https://scratch.mit.edu/discuss/topic/280263/]this topic[/url].

[b]2.8 [url=https://scratch.mit.edu/discuss/post/7749389/]Default list in a new Scratch project[/url][/b]
When you make a new Scratch project, a variable called "my variable" is automatically created.  Some Scratchers have suggested that a list should automatically be created, for example called "my list".  However, lists tend to be more complicated for newer users, and hence not used as much.

[b]2.9 [url=https://scratch.mit.edu/discuss/post/4094599/]Letters in cloud variables[/url][/b]
Some users would like an easy way to set cloud variables to values which include letters.  However, allowing letters in cloud variables would cause a lot of moderation issues.  For example, it would be too easy to make inappropriate cloud chat projects; for more information, see #3.1 on this list.

It is possible to simulate letters in cloud variables by encoding and decoding between numbers in cloud variables and letters in normal variables.

[big][b][u]3. Scratch Projects[/u][/b][/big]

[b]3.1 [url=https://scratch.mit.edu/discuss/topic/357609/?page=1#post-3622655]Chat projects with cloud variables[/url][/b]
Although it is possible to make a chat project using cloud variables, it is not allowed to make such a project.  This is because there is a high potential for bullying and inappropriate messages, and the Scratch Team does not have the resources to moderate these chat rooms.

Chat projects on Scratch which contained a whitelist (that is, the user could only chat using certain words) used to be allowed on Scratch.  Over time, however, the moderation issues got too high, and some users attempted to use such projects to get around the [url=https://scratch.mit.edu/community_guidelines/]Community Guidelines[/url].  As a result, the Scratch Team has decided that these kinds of projects are not allowed on the Scratch website, even if they contain a whitelist of words.  However, [i]whitelisted phrases[/i] are okay, provided that users cannot freely write their own sentences using the cloud chat project.

[b]3.2 [url=https://scratch.mit.edu/discuss/topic/135124/?page=1#post-1222338]Disable remixing[/url] or [url=https://scratch.mit.edu/discuss/topic/117040/?page=1#post-1034040]censor minor remixes[/url][/b]
One of the most important ideas of Scratch is the [i]share[/i] aspect.  Scratch is a website not only for displaying your work, but also for [i]sharing[/i] it with others, and by posting your project on the Scratch website you agree to allow others to remix your work.  You are not allowed to write "Do not remix this project" in the Notes and Credits of your project; you may get alerted for this, because it discourages remixing.  This suggestion extends to the ability to require permission to remix a project, as you have already given permission to others to use your creations by sharing a project on Scratch; for more information, see [url=https://scratch.mit.edu/discuss/topic/517815/?page=11#post-5302901]this post[/url].

A remix of a project is allowed on Scratch, even if the remix only contains minor changes (this includes recolors).  However, when you remix a project, you should put in the Notes and Credits what you changed.  If you see a project that contains no noticeable changes, please use the Report button on it so the Scratch Team can take a look at it.  This suggestion extends to "extremely minor remixes," such as a remix of a game that gives you 2 points per second instead of 1.  As long as the user explains what they changed about the project and gives proper credit, this is okay.

[b]3.3 [url=https://scratch.mit.edu/discuss/topic/307324/?page=2#post-3187896]Ban certain franchises[/url][/b]
Generally, the Scratch Team does not censor projects based on a certain franchise unless a large number of inappropriate projects were made with the franchise.  An example is Five Nights at Freddy's; see [url=https://scratch.mit.edu/discuss/topic/168506/?page=1#post-1606792]this announcement[/url] for more information.  In general, it is usually possible to make appropriate projects based on a certain franchise.  Of course, you should always report inappropriate projects of any kind.

[b]3.4 [url=https://scratch.mit.edu/discuss/topic/343602/?page=130#post-4541993]Censor projects with no coding[/url][/b]
Scratch encourages creativity of many kinds, not just programming.  As a result, many kinds of projects are allowed, such as algorithms, games, art, animations, music, and others.  Some of these projects do not necessarily need any scripts in them, and the Scratch Team will not require that they do.

[b]3.5 [url=https://scratch.mit.edu/discuss/topic/141100/?page=9#post-4600199]Remove the automatic project censoring system[/url][/b]
The automatic project censoring system, with the accompanying temporary account block, is extremely useful to ensure that the community stays safe.  Without this system, users who make inappropriate projects could keep making them without immediate consequence if a moderator is not online at the time.  That would just expose more people to inappropriate content.  While the Scratch Team is open to making improvements to this system, neither removing the automatic project censor nor removing the automatic temporary account block are the solutions.

[b]3.6 [url=https://scratch.mit.edu/discuss/topic/641416/?page=1#post-6735765]Ability to see Scratchers' unshared projects[/url][/b]
If a Scratch project is unshared, then it is not intended to be seen by anybody other than the project creator and the Scratch Team.  Allowing anybody to view unshared projects made by other Scratchers has the potential for abuse: Scratch projects could be leaked before they are ready to be shared, personal information could be exchanged, or someone could encounter inappropriate content that was intended to be removed from the Scratch website.  Keeping unshared projects hidden from other Scratchers helps prevent this abuse from happening.

While the Scratch Team is open to implementing features to make collaboration easier, allowing Scratchers to view others' unshared projects is not the solution.  For more information, see [url=https://scratch.mit.edu/discuss/topic/609224/?page=1#post-6358631]this post[/url].

[big][b][u]4. Project Pages[/u][/b][/big]

[b]4.1 [url=https://scratch.mit.edu/discuss/topic/203362/?page=1#post-2038330]Disable “See Inside”[/url] or [url=https://scratch.mit.edu/discuss/topic/120888/?page=1#post-1071234]restrict sharing[/url][/b]
Some users want an option to prevent Scratchers from looking inside their project and using their artwork, scripts, or sounds.  However, the core ideas of Scratch are "Imagine, Program, [i]Share[/i]."  By sharing a project on the Scratch website, you are allowing others to see the code and potentially remix or reuse the data inside, as long as they give credit.  That being said, please use the Report button on any project that uses content from another Scratcher without giving credit to them.  If you do not want other users to see inside your project, then do not share your project on the Scratch website.

Restricting sharing so that only certain users can view the project is also not going to be implemented.  It is important for projects to be publicly shared for everyone to see so people can report them if they are inappropriate.  Only allowing certain users to view projects could increase the chances of inappropriate projects being shared on the website.  "Unlisted projects," similar to a YouTube feature, will also not be implemented for the same reason; for more information, see [url=https://scratch.mit.edu/discuss/topic/296512/?page=2#post-3742815]this post[/url].  It could also be used for private messaging; for more information, see #7.1 on this list.

[b]4.2 [url=https://scratch.mit.edu/discuss/topic/196776/?page=2#post-1958521]Dislike button[/url] or [url=https://scratch.mit.edu/discuss/topic/271875/?page=1#post-2749716]a project rating system[/url][/b]
Generally, a user's first project is something rather simple, such as a test project, a remix, or a project made using a tutorial.  Because this project is simple, other users may give the project low ratings since it is not advanced.  With low enough ratings, the creator might be discouraged enough to stop using Scratch.  Moreover, constructive feedback is encouraged on Scratch.  A dislike button may show the creator how many people disliked their project, but it tells nothing about what the creator could do better.  If you do not like a project, you could choose not to love it, or you could leave a [i]respectful and constructive[/i] comment telling the user how to improve, in addition to saying what you like about the project.

With that, a dislike button is rejected for anything, including projects and comments.  However, a like button for comments is NOT rejected.  You can discuss it on [url=https://scratch.mit.edu/discuss/topic/43677/]this topic[/url].

[b]4.3 [url=https://scratch.mit.edu/discuss/topic/315901/?page=1#post-3268569]Ability to see who viewed a project[/url][/b]
Views are different from loves and favorites in that users can view a project to see if they like it, and then love or favorite the project if they do like it.  With this suggestion, drama could be started if a user sees that another user viewed a project, but did not love or favorite it.  Moreover, projects generally get significantly more views than loves, favorites, or comments, so if users got notifications for this, it would lead to lots of unwanted messages.  Despite all this, there is a workaround for this which uses cloud variables, so one could potentially see who viewed a project.  This includes the ability to see who viewed a comment, profile, studio, or forum post. 

[b]4.4 [url=https://scratch.mit.edu/discuss/topic/633031/?page=1#post-6643659]Ability to see who reported a project[/url][/b]
Reports are intended to be anonymous.  With this suggestion, drama could be started if a user sees that another user reported their project.  Some may even retaliate by reporting their projects in return (whether or not the projects deserved to be reported).  This includes the ability to see who reported a comment, profile, studio, or forum post.

[big][b][u]5. Studio Pages[/u][/b][/big]

[b]5.1 [url=https://scratch.mit.edu/discuss/topic/257879/?page=1#post-2621530]Remove studio activity messages[/url][/b]
Although they may seem annoying at times, they are rather helpful for some users.  Removing such messages entirely does not have a clear benefit for everyone.  If you find it annoying, one easy way to solve this is to not curate so many studios.  

However, the option to turn them off is NOT rejected.  You can discuss it on [url=https://scratch.mit.edu/discuss/topic/76356/]this topic[/url].

[b]5.2 [url=https://scratch.mit.edu/discuss/topic/236541/?page=6#post-3190328]"Invite all followers" button for studios[/url][/b]
This feature existed in Scratch 2.0, but it was an extremely easy way for one user to create lots of notification spam for other users, most of which was unwanted.  By removing this feature, users are forced to work a little bit to invite a large number of users.

[b]5.3 [url=https://scratch.mit.edu/discuss/topic/9408/?page=1#post-67636]Remove "add everything" or "invite everyone" studios[/url][/b]
These studios are not against the Community Guidelines and are also rather harmless.  Certain friendships or collaborations could also be formed as a result of such studios.

[b]5.4 [url=https://scratch.mit.edu/discuss/topic/526621/?page=30#post-5416219]Revert back to older versions of the studio pages[/url][/b]
The Scratch website has to update sometimes to accommodate certain changes.  In particular, the Scratch 3.0 studio pages were created to improve website performance and the studio experience.  Changing the studio pages back to these older versions would not only undo months of hard work by the Scratch Team, but they also may not be sustainable in the long run anymore.  More information on why these changes were made are stated in [url=https://scratch.mit.edu/discuss/topic/526539/]this topic[/url], and frequently asked questions are listed in [url=https://scratch.mit.edu/discuss/topic/526541/]this topic[/url].

The Scratch Team is still working on bug fixes, new features, and other improvements on Scratch 3.0 studio pages.  The new interface was created in such a way that it is easy for the Scratch Team to keep working on improvements.  The Scratch Team will continue to evaluate constructive feedback on how they could improve upon the current studio pages.  Common studio suggestions can be found on [url=https://scratch.mit.edu/discuss/topic/527997/]this topic[/url].

[b]5.5 [url=https://scratch.mit.edu/discuss/topic/519356/?page=9#post-5452511]Increase the studio reply limit[/url][/b]
The reply limit of 25 replies in studios was implemented to keep studio conversations open to the community and to improve website performance.  Load times and server stresses tend to increase with larger reply limits, particularly due to the large number of Scratch users on the website.  The number 25 was chosen as a practical one to mitigate these issues while also encouraging open conversation in studios.

[b]5.6 [url=https://scratch.mit.edu/discuss/topic/680817/?page=1#post-7184283]Add multiple studio hosts[/url][/b]
The restriction of only allowing one studio host in a studio was implemented to help prevent studio raids and confusion over who edited the studio description.  By allowing multiple studio hosts in one studio, this introduces the same problems that the studio host role was intended to solve in the first place.

[big][b][u]6. Comments and Text Fields[/u][/b][/big]

[b]6.1 [url=https://scratch.mit.edu/discuss/topic/195310/?page=1#post-1939992]Delete or edit your comments everywhere[/url][/b]
The inability to delete your comments everywhere is put in place so users do not post inappropriate comments or spam comments on other users' profiles, projects, or studios, just to delete them later on.  In contrast, you are not really likely to spam your own projects or profile.  The only benefits to this are to remove comments that you did not mean to post and to fix spelling errors.  The former could be solved by thinking carefully before posting any comments, and the latter could be worked around by typing slowly and/or stating your mistakes in a reply to the comment.  This also applies to forum posts; that is, a feature for Scratchers to delete their own forum posts will not be implemented.

Editing comments could similarly lead to comment manipulation, such as a user commenting "I like this project," waiting until someone replies with "I agree," and then editing the original comment to say "I hate this project."  Allowing Scratch Team members to view the edit history of a comment does not make it easy to moderate, since then they have to look carefully at the context of each edit, which takes time.

[b]6.2 [url=https://scratch.mit.edu/discuss/topic/353861/?page=1#post-3577897]Remove character limits on text fields[/url][/b]
The character limit exists to prevent spam.  If any character limits were removed entirely, spammers could use this to paste large blocks of text, effectively slowing down the website.

Simply raising the limits, however, is NOT rejected.  You can discuss various character limits on the following topics: [url=https://scratch.mit.edu/discuss/topic/16406/]About Me and What I'm Working On[/url] or [url=https://scratch.mit.edu/discuss/topic/118446/]studio descriptions[/url].

[b]6.3 [url=https://scratch.mit.edu/discuss/topic/665/?page=1#post-4221]Notification for being mentioned in comments[/url][/b]
Some users would like to be notified whenever someone mentions their username in a comment on the website.  Although such an option was considered, it was not added due to the potential for spam.  For instance, someone could write @Scratcher multiple times to spam that user's notifications.

[b]6.4 [url=https://scratch.mit.edu/discuss/topic/425584/?page=2#post-4264317]Live commenting[/url] or [url=https://scratch.mit.edu/discuss/topic/441892/?page=1#post-4445027]streaming[/url][/b]
This refers to some system where you would not need to refresh the webpage to see new comments that are posted.  Some Scratchers think this would be convenient if you are engaged in a conversation with someone so that the conversation moves more quickly (somewhat like how texting works).  However, aside from the technological barriers this would bring, it would also put a greater emphasis on the social media aspect of Scratch, moving the focus away from the project-creating aspect.  Indeed, project creating is intended to be the primary focus of Scratch.

Streaming is similarly rejected, as it is a form of live commenting.  With streams, it is easy to share personal information without anyone being able to report it, which the Scratch Team does not want to risk.  Although one solution would be to have the Scratch Team moderate the streams, they do not have the resources to do that effectively.

[b]6.5 [url=https://scratch.mit.edu/discuss/topic/366304/?page=5#post-3694806]Censor the words {da[i][/i]mn, cr[i][/i]ap, frick, lmao}[/url][/b]
The Scratch Team has decided that these words are not offensive enough to be censored completely.  As always, use the Report button if someone is using these words (or any others) disrespectfully.  In addition, if you come across a word that is not censored, but you think it should be, please let the Scratch Team know about it through [url=https://scratch.mit.edu/contact-us/]Contact Us[/url], rather than using the comments or forums to report it.

There is an existing suggestion that would allow you to personally censor these words, and others, so that only you cannot see them; you can discuss it on [url=https://scratch.mit.edu/discuss/topic/460996/]this topic[/url].

[big][b][u]7. Scratch Community[/u][/b][/big]

[b]7.1 [url=https://scratcharchive.asun.co/forums/viewtopic.php?id=12732&p=1#p83414]Private messaging[/url][/b]
Scratch currently has public messaging, meaning anyone can see the comments that you write.  As a result, people are more likely to be respectful since anyone can see the comment.  However, with private messaging, people know that only the intended recipient can see the message, which could lead to many more disrespectful or inappropriate comments.  The Scratch Team also simply does not have the resources to moderate a private messaging system, precisely because there would be a lot of bad comments.  In addition, it is a huge Internet safety concern and is not the purpose of Scratch anyway.

This suggestion extends to allowing users to post links to other private messaging websites.  Many such messaging websites are not as well-moderated as Scratch is.  If such links were allowed, Scratch may be held responsible if anything bad happens to someone.  It also extends to voice chat capabilities on Scratch; for more information, see [url=https://scratch.mit.edu/discuss/topic/454532/?page=1#post-4583863]this post[/url].

[b]7.2 [url=https://scratch.mit.edu/discuss/topic/27542/?page=1#post-242372]A 13+ version of the Scratch website[/url] or [url=https://scratch.mit.edu/discuss/topic/343700/?page=1#post-3468115]age-restricted content[/url][/b]
Scratch is designed for ages 8 to 16, but any content shared on the website must be appropriate for all ages.  Dividing the community by making a separate, age-restricted website would not be helpful.  Potential restrictions from entering the website (such as a warning, or requiring a parent to answer math equations) would not necessarily stop an underage child from entering the 13+ website.  

This suggestion extends to age-restricting [i]anything[/i] on Scratch, such as viewing specific projects or accessing specific Scratch features.  As a general rule, Scratch is for all ages, and content shared on the Scratch website should be appropriate for all ages.

[b]7.3 [url=https://scratch.mit.edu/discuss/topic/77250/?page=1#post-663346]Ban "follow for follow" (F4F)[/url][/b]
Although many Scratchers do not enjoy seeing follow for follow requests, asking someone to participate in follow for follow is relatively harmless.  If someone asks you to do follow for follow, and you do not want to, just [i]politely[/i] decline their request.  If they keep spamming you with requests, you can use the Report button on their comments.

[b]7.4 [url=https://scratch.mit.edu/discuss/topic/347796/?page=1#post-3513044]Allow Scratchers to moderate the website[/url][/b]
A community moderator program used to exist where Scratchers could moderate the website, but it was removed due to some very inappropriate things showing up in the report queue, among other reasons.  A volunteer program could also encourage trolls to use moderator tools to cause problems on the website.  As a result, the Scratch Team has decided to only allow adults to moderate the website, including the forums, and those adults would need to join the Scratch Team as a paid position in order to moderate the website.

If you are 18 or older, legally allowed to work in the United States, and are interested in moderating the website, check out the [url=https://www.scratchfoundation.org/opportunities/]Jobs[/url] link to see if there are any openings for the "Community Moderator" position.

[b]7.5 [url=https://scratch.mit.edu/discuss/topic/268823/?page=1#post-2706108]Scratchers and Scratch Team members should not promote political views[/url][/b]
According to the Community Guidelines, [i]"Scratch welcomes people of all ages, races, ethnicities, religions, abilities, sexual orientations, and gender identities."[/i]  As long as someone's beliefs and statements are respectful and welcoming towards all groups of people, they are allowed to express them on the Scratch website.  This includes Scratchers, as well as members of the Scratch Team; in particular, the Scratch Team will continue to feature projects and studios that they believe promote the core values of Scratch and its community.

More detailed explanations in the case of LGBTQ+ ideas can be found in [url=https://scratch.mit.edu/discuss/topic/343602/?page=118#post-4455151]this post[/url] and [url=https://scratch.mit.edu/discuss/topic/268662/?page=3#post-2704445]this post[/url].

[b]7.6 [url=https://scratch.mit.edu/discuss/topic/284677/?page=9#post-3023560]Improve or remove the extension policy[/url][/b]
Browser extensions, userscripts, and userstyles are not allowed to be mentioned on Scratch as per the [url=https://scratch.mit.edu/discuss/topic/284272/?page=1#post-2907564]extension policy[/url].  Although such extensions may be useful, it is not easy to tell if the extension is harmful to your device.  The Scratch Team believes that the potential risks and harm in allowing browser extensions outweigh the benefits, and are not looking for ways to improve this policy.  This includes browser extensions, userscripts, and userstyles made by anyone, including Scratchers or well-known companies like Google.

[b]7.7 [url=https://scratch.mit.edu/discuss/topic/348410/?page=1#post-3518582]Paid advertisements on the Scratch website[/url][/b]
Some users are interested in seeing paid advertisements in their projects, like on YouTube, so they can make real money from people viewing their projects.  Similarly, some users believe that having advertisements around the Scratch website can allow the Scratch Team to make more money.  However, Scratch is supposed to be a non-profit organization.  If the Scratch Team or any Scratchers start making money from anywhere on the Scratch website, that would contradict this non-profit philosophy, and that would be a huge legal issue.

[b]7.8 [url=https://scratch.mit.edu/discuss/topic/288573/?page=3#post-3778904]Project advertisements on the Scratch website[/url][/b]
Some users are interested in having advertisements around the website which advertise Scratch projects or studios, even if they are not paid for these advertisements.  However, it is unclear how projects would be chosen to be advertised.  Also, this would require a Scratch Team member to ensure that inappropriate projects are not chosen to be advertised, and the Scratch Team does not currently have the resources to do this.

[b]7.9 [url=https://scratch.mit.edu/discuss/topic/355721/?page=1#post-3603086]Pop-up alert that encourages users to take a break from screen time[/url][/b]
Certainly, too much computer time is not good for anyone.  But, if someone is concerned about themselves or their children getting too much screen time, there are other methods that exist that can help encourage these healthy choices, such as external software or simple willpower.  There is not a need to have such a warning built into Scratch, even if it is optional or able to be ignored.

[b]7.10 [url=https://scratch.mit.edu/discuss/topic/400079/?page=4#post-3983330]Propose your own projects to be featured[/url][/b]
Scratchers can suggest projects that they think should be featured in the [url=https://scratch.mit.edu/studios/28715018/]Propose Projects to be Featured[/url] studio.  One of the rules of proposing projects is that you cannot propose your own projects to be featured.  There are several reasons why this rule is in place.  First, if users could propose their own projects, then there would be more requests in the studio, and it would be difficult for curators to add them all.  Second, proposing someone else's project helps emphasize that Scratch is a helpful and supportive community, as proposing someone's project to be featured is an indication that the project creator has made a good project.  Lastly, this verifies that at least one other person has seen the project and agrees that it is a feature-worthy project, leading to higher-quality proposals.

If you would like your own project to be featured, keep in mind that you can actually ask someone else to propose your project for you.  Be sure to practice good advertising as described in [url=https://scratch.mit.edu/discuss/topic/396541/]this topic[/url], and be polite when asking.  Keep in mind that they may decide not to propose it; you should not try to force them to propose it.

[b]7.11 [url=https://scratch.mit.edu/discuss/topic/423584/?page=1#post-4229735]"Recently Shared Projects" row on the front page[/url][/b]
This proposed row on the front page would display projects that were most recently shared by Scratchers, in an attempt to help unnoticed Scratchers get more views.  [url=https://en.scratch-wiki.info/wiki/Recently_Shared_Projects]Such a feature existed[/url] in Scratch 1.4 and Scratch 2.0.  It was removed for several reasons: the community did not find these projects interesting, the row would sometimes show inappropriate projects, and these new projects would often get disrespectful comments from other users.  If you are interested in seeing recently shared projects, there is a "Recent" section of the Explore page; see [url=https://scratch.mit.edu/explore/projects/all/recent]this page[/url].

A button or link which allows you to view a random project is also rejected [url=https://scratch.mit.edu/discuss/topic/153868/?page=6#post-6233413]for similar reasons[/url].

[b]7.12 [url=https://scratch.mit.edu/discuss/topic/558343/?page=1#post-5784390]"Featured Scratchers" row on the front page[/url][/b]
This proposed row on the front page would display Scratchers who have been considered helpful, respectful, and/or good project creators.  However, the Scratch Team believes that the existing "Featured Projects" row already gives enough attention to Scratchers, and that it showcases projects, which is the main purpose of Scratch.  It helps keep Scratch focused on projects rather than specific users.

[b]7.13 [url=https://scratch.mit.edu/discuss/topic/427555/?page=3#post-4287696]Ability to vote on featured projects[/url][/b]
There are already three rows on the front page that are controlled entirely by the Scratch community: "Projects Curated by", "What the Community is Remixing", and "What the Community is Loving."  The "Featured Projects" row is useful to give the Scratch Team a chance to showcase projects that they feel are inspirational, highlight specific cultures, and are not very popular.

[b]7.14 [url=https://scratch.mit.edu/discuss/topic/689659/]Revert the purple color palette back to blue[/url][/b]
The specific color of purple was chosen as a practical one, as the Scratch Team determined through research that it is the color which is the most helpful for those with vision impairments.  That is, the color change is important for the sake of improved accessibility, which means that more people will be able to use Scratch.  For more information on the Scratch Team's process that led to the purple color palette, see [url=https://scratch.mit.edu/discuss/topic/343602/?page=376#post-7341699]this post[/url].

However, an option to change the color palette is NOT rejected; you can discuss it on [url=https://scratch.mit.edu/discuss/topic/296027/]this topic[/url].

[b]7.15 [url=https://scratch.mit.edu/discuss/topic/31571/?page=1#post-269139]"Other" option for reporting profiles[/url][/b]
An "other" option for reporting profiles used to exist, but the Scratch Team found that Scratchers would often use it to report comments and projects.  It is much easier for the Scratch Team to find inappropriate comments and projects if they were reported directly.  To report something inappropriate about the profile that is not listed under the given options, contact the Scratch Team using [url=https://scratch.mit.edu/contact-us/]Contact Us[/url].

[b]7.16 [url=https://scratch.mit.edu/discuss/topic/735785/?page=1#post-7752840]Change the types of projects to be featured[/url][/b]
The Scratch Team has a list of types of projects they are looking to feature in the [url=https://scratch.mit.edu/studios/28715018]Propose Projects to be Featured studio[/url].  Such a list has existed for years, and the Scratch Team is happy with the kinds of projects they have been featuring.  While some Scratchers are unhappy with the types of projects being featured, it is ultimately up to the Scratch Team to decide what to feature.

[b]7.17 [url=https://scratch.mit.edu/discuss/post/7841418/]Official contests on Scratch[/url][/b]
Scratchers often host contests about making a certain type of Scratch project, and it has been suggested that the Scratch Team should host an official contest.  However, Scratch is not about competition; the Scratch Team would prefer to emphasize the fun of creativity and learning without doing so in a competitive environment.  Scratchers are still allowed to host their own contests, but the Scratch Team will not hold any official contests.

[big][b][u]8. Account Information[/u][/b][/big]

[b]8.1 [url=https://scratch.mit.edu/discuss/topic/8664/?page=4#post-367229]Changing usernames[/url] or [url=https://scratch.mit.edu/discuss/topic/240442/?page=1#post-2456140]changing display names[/url][/b]
If a user could change their username (or even set a certain "nickname" or "display name"), this could be very confusing for the Scratch community, especially for those following that user.  In addition, this would make moderation of the website more difficult because it would be harder for the Scratch Team to keep an eye on what a user may be doing.  The Scratch Team has allowed username changes only on very rare occasions, such as if the username contains personal information or causes gender dysphoria.  Generally, the Scratch Team does not change usernames on request (including for reasons such as "I do not like my current username anymore").

However, because of the way that usernames are stored on the server, changing the cases of letters in your username (for example, changing @Za-Chary to @ZA-CHARY) is NOT rejected; you can discuss it on [url=https://scratch.mit.edu/discuss/topic/339198/]this topic[/url].

[b]8.2 [url=https://scratch.mit.edu/discuss/topic/188098/?page=2#post-1870800]Add a rank above Scratcher[/url] or [url=https://scratch.mit.edu/discuss/topic/112892/?page=1#post-993968]allow users to skip the New Scratcher status[/url][/b]
There are three ranks: New Scratcher, Scratcher, and Scratch Team.  The only reason the New Scratcher rank exists is to prevent spam, and since it only takes a few weeks to become a Scratcher, bullying and separation are rather minimal.  Similarly, the Scratch Team rank exists so users know who is on the Scratch Team; generally, Scratch Team members do not brag about the Scratch Team rank.  In contrast, there may be division in the community between Scratchers and those with a higher rank, which could also lead to bragging and bullying.  This also includes a "verified Scratcher" status where well-known Scratchers get a special symbol next to their name.

Although the restrictions for New Scratchers may seem annoying, they are extremely effective against spam and inappropriate content.  For New Scratchers who are wondering how to become a Scratcher or what it means to be one, check out [url=https://scratch.mit.edu/discuss/topic/6986/]this post[/url].  The Scratch Team will not allow any accounts to "skip" the New Scratcher status, even if it is an alternate account of an existing account.

[b]8.3 [url=https://scratch.mit.edu/discuss/topic/10579/?page=13#post-3326952]Show when users are online[/url][/b]
This suggestion refers to some sort of indicator that lets you know if a user is currently online.  The Scratch Team has discussed it and has decided that it is not something that can benefit Scratch as an educational platform.  Between making projects, sharing projects, and viewing projects, an online indicator is not much help in these areas.

[b]8.4 [url=https://scratch.mit.edu/discuss/topic/170191/?page=1#post-1631442]Show when users are banned[/url][/b]
For privacy reasons, the Scratch Team does not share such account information with anyone other than the account owner.  In particular, a banned user may not want to reveal the fact that they were banned to the public.

However, giving a Scratcher the option to publicly show if they are banned is NOT rejected; you can discuss it on [url=https://scratch.mit.edu/discuss/topic/465353/]this topic[/url].

[b]8.5 [url=https://scratch.mit.edu/discuss/topic/370007/?page=1#post-3704074]Recycle usernames[/url] or [url=https://scratch.mit.edu/discuss/topic/160908/?page=3#post-1765412]delete inactive accounts[/url][/b]
The only potential benefit to these suggestions is that Scratchers could reuse usernames.  However, this is problematic in several ways.  Deleting inactive accounts might mean that the user's projects get deleted, which would be extremely unfortunate should they decide to return to Scratch.  Even if the account is already deleted, someone may attempt to impersonate the deleted user with the new username.  In addition, there are reasons that the Scratch Team may need to refer back to the deleted account.

This includes deleting inactive accounts for any reason, including "name sniping" accounts as well as accounts that appear to have no activity at all.  The Scratch Team sees no need to take down any accounts at this time to reuse usernames, free up server space, or for any other reason.

[b]8.6 [url=https://scratch.mit.edu/discuss/topic/211405/?page=4#post-2128208]Blocking or ignoring Scratchers[/url][/b]
This suggestion refers to an optional system that makes it so that you do not have to see comments that a particular user posts.  This feature existed in Scratch 1.4, but the Scratch Team found that it buried any problems rather than solving them.  Even if you block a user, that does not stop them from harassing other Scratchers.  If someone is being disrespectful, be sure to report that user with the Report button, or use the [url=https://scratch.mit.edu/contact-us/]Contact Us[/url] link if the situation requires more explanation.

However, a system to block users while simultaneously reporting them is NOT rejected; you can discuss them on [url=https://scratch.mit.edu/discuss/topic/324190/]this topic[/url].

[b]8.7 [url=https://scratch.mit.edu/discuss/topic/101652/?page=1#post-884708]Digital currency[/url] or [url=https://scratch.mit.edu/discuss/topic/144248/?page=3#post-1333242]money blocks[/url][/b]
Some form of digital currency which allows you to "buy" Scratch features (with real or fake money) would not really benefit the educational value of Scratch; after all, there is not really anything that you can buy.  While there could be features that are only unlockable via digital currency, this does not really contribute to Scratch's purpose of being a programming language available for everyone.  However, you can make digital currency in your own projects, if you like, as long as it follows the [url=https://scratch.mit.edu/discuss/topic/340012/]policy on pretend currency systems[/url].

This suggestion extends to Scratch blocks in the editor which can be used to exchange digital currency.  The problem with such money blocks is that many users on the website are young and do not quite know how money works (and most do not even have a credit card account).  Users could make projects which require others to pay a large amount of money to play the project.  Overall, it adds further complexity to the website and would limit users' access, without any clear benefit towards the educational value.

A very good detailed analysis for why digital currency should not be on Scratch can be found on [url=https://scratch.mit.edu/discuss/topic/346976/?page=2#post-3509160]this post[/url].

[b]8.8 [url=https://scratch.mit.edu/discuss/topic/8900/?page=1#post-456374]Scratch achievements[/url][/b]
Some users have suggested Scratch achievements such as "Created 50 projects" with the idea that this would give users motivation to keep using Scratch.  However, this sort of idea does not really fit in with the purpose of Scratch.  Some users may use their achievements to determine that they are "better" than other users.  However, you are allowed to make achievements in your own games, if you like.

[b]8.9 [url=https://scratch.mit.edu/discuss/topic/103978/?page=6#post-3665886]Notification when someone unfollows you[/url][/b]
This sort of feature could create a lot of drama within the Scratch community.  Those who are concerned about follower count may get angry at another user for unfollowing them.  The Scratch Team believes that users should be able to follow or unfollow anyone they want without feeling guilty about it, especially as their interests change.

[b]8.10 [url=https://scratch.mit.edu/discuss/topic/482015/?page=22#post-4965047]Change the list of locations[/url][/b]
The list of locations that the Scratch Team uses is determined by an official international standard for the list of countries.  The localization team for Scratch has determined that they will continue to go by this standard.  As a result, countries will not be added or removed from this list.  An exception could be made if the international standard changes, but that is out of the Scratch Team's control.

This suggestion extends to removing the location feature entirely.  For more information why that in particular is rejected, see [url=https://scratch.mit.edu/discuss/topic/321582/?page=3#post-3326935]this post[/url].

[big][b][u]9. Discussion Forum Features[/u][/b][/big]

[b]9.1 [url=https://scratch.mit.edu/discuss/topic/269283/?page=1#post-2711595]Bring back the "Discuss" tab[/url][/b]
The Discuss tab was removed for reasons that may not be 100% clear to some users, but it will not be coming back.  In general, the forums are not as restricted as the main website is, in terms of post content.  For instance, users can post images on the forums, write Scratch blocks on the forums, and write and edit posts of up to 200,000 characters, none of which is possible on the main website.  These options allow for more spam and misuse, especially for new forum users who are not aware of how the forums work.  It is suggested that Scratchers learn of the forums through other Scratchers, who direct them to the correct forums as needed.

A very good detailed analysis for why the Discuss button may have been removed can be found on [url=https://scratch.mit.edu/discuss/topic/295892/?page=10#post-3282493]this post[/url].

[b]9.2 [url=https://scratch.mit.edu/discuss/topic/19011/?page=7#post-3579079]Notification for being quoted in topics[/url][/b]
Due to the way that the forum structure works, this suggestion simply is not possible to add.  Even if it was possible, there would be a very high possibility of getting spammed with unwanted notifications.  The technical issues and the potential for abuse make this feature rather impractical.  If you want to stay updated on a certain topic, you can always follow the topic and get notified for new posts that are made.

[b]9.3 [url=https://scratch.mit.edu/discuss/topic/225074/?page=1#post-2282480]Off-topic or miscellaneous section on the forums[/url][/b]
This forum would have been used for posting about anything that was not necessarily related to Scratch.  There actually used to be a forum topic like this, but it was difficult to moderate, and so it was shut down and replaced by the "Things I'm Making and Creating" and the "Things I'm Reading and Playing" forums (which do not completely allow off-topic posts).

This suggestion extends to an off-topic or miscellaneous forum for Scratch-related topics.  If there is something that you would like to say, Scratch-related or otherwise, and it is not a good fit for one of the existing forums, it would be a good idea to make a project or studio about it instead.

[b]9.4 [url=https://scratch.mit.edu/discuss/topic/440144/?page=1#post-4426090]An official list of accepted suggestions[/url][/b]
As a counterpart to the list of rejected suggestions, some Scratchers have expressed interest in compiling a list of features of Scratch that were suggested by someone, and eventually implemented.  But it is not easy to tell whether a suggestion was implemented because it was suggested by Scratchers in the forums, Scratchers elsewhere, a Scratch Team member, a teacher, or someone else.  In other words, every feature currently in Scratch was suggested by somebody, so such a list would just be a list of all features of Scratch.

[b]9.5 [url=https://scratch.mit.edu/discuss/topic/449439/?page=3#post-4564638]Allow files to be uploaded into forum posts[/url][/b]
The Scratch Team would have to pay for storage of these files, and they only have a limited amount of resources to do so.  Storage space would be better allocated toward Scratch projects, anyway.  There is also the issue of someone uploading a file that can potentially cause harm to someone's computer.  Searching through these files would require significantly more moderation work, and there are not enough moderators able to do the job at the moment.

[b]9.6 [url=https://scratch.mit.edu/discuss/topic/40584/?page=10#post-5109469]Polls in the forums[/url][/b]
Some Scratchers have suggested optional polls that could be implemented into forum threads so users can vote on a particular suggestion, state that they experience the same glitch as someone else, or for other reasons.  However, the Scratch Team is less interested in polling results and more interested in constructive posts on the forums.  Although polls could theoretically reduce the number of unconstructive posts, they likely would not help Scratchers think constructively and write constructive posts.  This suggestion includes polls that Scratchers can create themselves, as well as pre-made polls.

[b]9.7 [url=https://scratch.mit.edu/discuss/topic/293639/?page=2#post-3014753]Guide section on the forums[/url][/b]
This proposed forum section would be a place for guides and tutorials that Scratchers could freely make with the purpose of helping others.  However, the forums are generally a place for discussion; it is not a good place for topics with content that is not meant to be changed.  A Scratch project or the Scratch Wiki are two good places to make tutorials.

[b]9.8 [url=https://scratch.mit.edu/discuss/topic/94458/?page=2#post-824198]Report button for signatures[/url][/b]
To report a user's forum signature, you can just use the Report button on one of their posts, and for the reason for reporting, just explain that there is a problem with their signature.  The Scratch Team has expressed that there is no need for a separate Report button for signatures since this is an effective workaround.

[big][b][u]10. Discussion Forum Restrictions[/u][/b][/big]

[b]10.1 [url=https://scratch.mit.edu/discuss/topic/127048/?page=1#post-1134018]Remove or decrease the 60 Second Rule[/url][/b]
The "60 Second Rule" refers to the fact that Scratchers need to wait 60 seconds after posting in the forums before they can post again (120 seconds for New Scratchers).  While this may seem annoying, it is extremely effective against spam.  Moreover, it can require users to carefully think about what they have typed before posting.  You generally do not have to wait for very long between forum posts anyway; it is just 60 seconds.  Decreasing it is also [url=https://scratch.mit.edu/discuss/topic/437971/?page=1#post-4416568]rejected[/url]; that is, the number of seconds will not be changed.

[b]10.2 [url=https://scratch.mit.edu/discuss/topic/315314/?page=1#post-3254079]Show exact post count of other users[/url][/b]
Like with similar numbers on the website (such as 100+ projects in studios), there is not really much of a benefit to seeing the exact number.  Post count is not a competition.  The goal is not to make as many posts as possible; instead, one should aim to make quality posts to help other users.  If you are curious, you can still see your exact post count [url=https://scratch.mit.edu/discuss/search/?action=show_user&show_as=posts]here[/url].

This suggestion extends to adding additional post milestones past 1000+ (for example, showing that a user has 5000+ posts); for more information, see [url=https://scratch.mit.edu/discuss/topic/596010/?page=1#post-6521078]this post[/url].

[b]10.3 [url=https://scratch.mit.edu/discuss/topic/695/?page=1#post-4569]Remove restricted image hosts or add your own websites[/url][/b]
By requiring an image host website (such as [url=https://cubeupload.com/]cubeupload[/url]) to be used when posting images on the forums, this decreases the chances of inappropriate images being posted on the forums, as inappropriate images are not allowed on these image host websites.  The Scratch Team does not have the time to whitelist everybody's websites, especially when acceptable websites already exist.

Years ago, the Scratch forums suffered from trolls who continually spammed the forums with highly inappropriate images.  It got so bad that the [[]img] tag had to be temporarily disabled so it could be improved.  Certainly Scratchers would prefer to have to use an image hosting website rather than not being able to post images at all.